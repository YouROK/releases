{"version":3,"sources":["PosterCard.js","App.js","index.js"],"names":["style","media","display","flexFlow","backdrop","width","margin","borderRadius","trailer","PosterCard","props","React","useState","item","open","setOpen","className","onClick","src","poster_path","replace","alt","title","original_title","year","vote_average","toFixed","getCountries","getGenres","Dialog","onClose","aria-labelledby","fullWidth","maxWidth","DialogTitle","id","DialogContent","padding","backdrop_path","videos","results","map","tr","height","key","frameBorder","allow","allowFullScreen","overview","torrent","torr","date","substring","name","size","upload","download","DialogActions","Button","color","variant","element","cts","production_countries","el","iso_3166_1","join","origin_country","genres","s","charAt","toUpperCase","slice","App","releases","setReleases","link","setLink","setError","useEffect","callback","fetch","method","headers","Accept","then","res","json","error","e","console","getReleases","data","err","AppBar","position","Toolbar","Typography","time","items","length","itm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1eabe7fc.chunk.js","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core'\n\nconst style = {\n    media: {\n        display: 'flex',\n        flexFlow: 'row wrap',\n    },\n    backdrop: {\n        width: '200px',\n        margin: '5px',\n        borderRadius: '5px',\n    },\n    trailer: {\n        width: '200px',\n        margin: '5px',\n        borderRadius: '5px',\n    },\n}\n\nexport default function PosterCard(props) {\n    const [item, setItem] = React.useState(props.item)\n    const [open, setOpen] = React.useState(false)\n\n    return (\n        <div>\n            <div\n                className=\"thumbnail\"\n                onClick={() => {\n                    setOpen(true)\n                }}\n            >\n                <img className=\"poster\" src={item.poster_path.replace('original', 'w342') || '/empty_poster.png'} alt={item.title || item.original_title} />\n                <div className=\"mask\">\n                    <div className=\"info\">\n                        <h3>\n                            {item.title || item.original_title} {item.year && '(' + item.year + ')'}\n                        </h3>\n                        <small>{item.vote_average.toFixed(2) + getCountries(item)}</small>\n                        <br />\n                        <small>{getGenres(item)}</small>\n                        <br />\n                    </div>\n                </div>\n            </div>\n\n            <Dialog\n                open={open}\n                onClose={() => {\n                    setOpen(false)\n                }}\n                aria-labelledby=\"form-dialog-title\"\n                fullWidth={true}\n                maxWidth={'lg'}\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {item.title || item.original_title} {item.year && '(' + item.year + ')'}\n                </DialogTitle>\n                <DialogContent style={{ padding: '10px' }}>\n                    {item.original_title + ' • ' + item.vote_average.toFixed(2) + ' • ' + getGenres(item) + getCountries(item) + ' • ID ' + item.id}\n                    <br />\n                    <div>\n                        {item.backdrop_path && <img style={style.backdrop} src={item.backdrop_path.replace('original', 'w300')} alt={item.title || item.original_title} />}\n                        {item.videos &&\n                            item.videos.results &&\n                            item.videos.results.map((tr) => (\n                                <iframe\n                                    key={tr.key}\n                                    style={style.trailer}\n                                    width=\"200\"\n                                    height=\"113\"\n                                    src={'https://www.youtube.com/embed/' + tr.key}\n                                    frameBorder=\"0\"\n                                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                                    allowFullScreen\n                                />\n                            ))}\n                    </div>\n\n                    <p>{item.overview}</p>\n\n                    {item.torrent &&\n                        item.torrent.map((torr) => (\n                            <small>\n                                {torr.date.substring(0, 10)}\n                                <b> {torr.name} </b>\n                                <u>{torr.size} </u> ⇑ {torr.upload} ⇓ {torr.download}\n                                <br />\n                            </small>\n                        ))}\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        onClick={() => {\n                            setOpen(false)\n                        }}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                    >\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nfunction capitalize(s) {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nfunction getCountries(element) {\n    var cts = ''\n    if (element.production_countries != null)\n        cts = element.production_countries\n            .map(function (el) {\n                return el.iso_3166_1\n            })\n            .join(', ')\n    else cts = element.origin_country.join(', ')\n    if (cts) return ' • ' + cts\n    return ''\n}\n\nfunction getGenres(element) {\n    return element.genres\n        .map(function (el) {\n            return capitalize(el.name)\n        })\n        .join(', ')\n}\n","import './App.css'\nimport React, {useEffect} from 'react'\nimport {Button, Toolbar, Typography} from '@material-ui/core'\nimport AppBar from '@material-ui/core/AppBar'\nimport PosterCard from './PosterCard'\n\nexport default function App() {\n    const [releases, setReleases] = React.useState(null)\n    const [link, setLink] = React.useState('/releases/movies.json')\n    const [error, setError] = React.useState('')\n\n    useEffect(() => {\n        getReleases(link, (data, err) => {\n            if (data) setReleases(data)\n            else setError(err)\n        })\n    }, [link])\n\n    return (\n        <div className=\"App\">\n            <AppBar position=\"sticky\">\n                <Toolbar className=\"App-header\">\n                    <Button\n                        className=\"App-header-item\"\n                        variant=\"contained\"\n                        onClick={() => {\n                            setLink('/releases/movies.json')\n                        }}\n                    >\n                        Фильмы\n                    </Button>\n                    <Button\n                        className=\"App-header-item\"\n                        variant=\"contained\"\n                        onClick={() => {\n                            setLink('/releases/tv.json')\n                        }}\n                    >\n                        Сериалы\n                    </Button>\n                    <Button\n                        className=\"App-header-item\"\n                        variant=\"contained\"\n                        onClick={() => {\n                            setLink('/releases/cartoons.json')\n                        }}\n                    >\n                        Мультфильмы\n                    </Button>\n                    <Button\n                        className=\"App-header-item\"\n                        variant=\"contained\"\n                        onClick={() => {\n                            setLink('/releases/legends.json')\n                        }}\n                    >\n                        Легенды\n                    </Button>\n                    <Typography className=\"App-header-item\">{releases ? 'Последние обновление: ' + releases.date + ' ' + releases.time + ' ' + releases.items.length : ''}</Typography>\n                </Toolbar>\n            </AppBar>\n            <div className=\"App-content\">{releases && releases.items.map((itm) => <PosterCard className=\"App-content-item\" key={itm.id} item={itm}/>)}</div>\n        </div>\n    )\n}\n\nfunction getReleases(link, callback) {\n    try {\n        fetch(link, {\n            method: 'get',\n            headers: {\n                Accept: 'application/json, text/plain, */*',\n                'Content-Type': 'application/json',\n            },\n        })\n            .then((res) => res.json())\n            .then(\n                (json) => {\n                    callback(json, null)\n                },\n                (error) => {\n                    callback(null, error)\n                }\n            )\n    } catch (e) {\n        console.error(e)\n        callback(null, e)\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}